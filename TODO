General
  - Tramp OBJSETUP instead of rb_newobj
    * Need to analyze and figure out how to handle different uses and compilations
  - User set-able options for tracking (when the features are supported..)
  - Debug output

Linux
  - tramp calls in C extensions in --enable-shared
  - i386 "bug" with missing tramp to rb_newobj

OSX
  - i386 - what to do for leopard (#defines for mach_header vs mach_header_64)
  - find type sizes and offsets without GDB's help (lots of work, probably)
  - investigate the possibility of hard-coding info for brew/system rubies

Permutations
  - shared vs static
  - i386 vs x86_64
  - stripped vs not
  - linux vs osx
  - ruby 1.8 vs 1.9
  - O0 vs O1 vs O2 vs O3
  - inlined add_freelist vs not
  - universal binary vs not

Variables
  - sizeof(RVALUE)
  - sizeof(struct heaps_slot)
  - &rb_newobj [address of rb_newobj]
  - &add_freelist
  - &heaps
  - &heaps_used
  - &freelist
  - (int)&(((struct heaps_slot *)0)->slot) [offset of slot inside struct heaps_slot]
  - (int)&(((struct heaps_slot *)0)->limit)

Ruby 1.9 Variables
  - &rb_objspace

Tracking
  - add support for libjudy
  - time of object creation
  - stack trace at object creation
  - get rid of strdups for filenames
  - dump out struct SCOPE and BLOCK structures as json
  - sampling
  - track only certain types (dependent on OBJSETUP tramping)

Visualizations
  - count by filename
  - breakdown further by line/type/classname/hashsize/stringcontents
  - stack visualizations for all threads and blocks

Other Plugins
  - tcmalloc equivalent of malloc_get_usable_size
